* test headline_to_anchor using Github
  Try `data/anchors_test.org`.
  Maybe add cases to Tests.Analyze for each heading.
  Consider the case of a link in the heading.
* ? consider linking just to line numbers
  This won't be robust to changes in individual files --
  I'll have to regenerate the whole repo.
  But it would be easier.
* build the index
  For each file in each repo:
  Find all the IDs in it.
  If any of those is associated with a particular header,
  find the header,
  and determine how Github will represent its anchor.
* rewrite links
** syntax
#+BEGIN_SRC text
  They look like this:
    [[id:4274ee9a-8b13-4763-9719-f32dd7efbcea][Switzerland trip]]
  They should (probably) look like this:
    [[URL][text]]
#+END_SRC
** must replace every match *within line* or even *across lines*
   Really I need a parser.
** On Github, links to .org headers work like links to .md headers!
*** They look like `URL#text-of-the-header`.
*** I haven't tested edge cases.
    Weird punctuation, capitalization, space, etc.
*** the procedure ChatGPT described
**** initially
 Hereâ€™s how you can do it:

     Find or create the sub-header: Each header in an .org file has an automatically generated anchor, which is based on the text of the header.

     Format the anchor:
         Lowercase all the characters.
         Replace spaces and special characters (such as ?, !, @) with dashes (-).
         Remove any punctuation like periods, commas, colons, etc.

     Create the link: Use a relative link to the .org file followed by the anchor, prefixed by a #.
*** duplicate headers => "-n" suffixes, starting from 1
**** ChatGPT explains
 If two headers in the same .org file have the same text, GitHub generates unique anchors for each by appending incremental numbers to the duplicate anchors. The first occurrence of the header will have a standard anchor based on the header text, while subsequent occurrences of headers with the same text will have -1, -2, etc., appended to their anchors.
**** It's true (I tested).
* think about leading # symbols, and others
** motivation
   In .org files, lines that start with # in Github will not render.
   If generating Markdown, they will be different,
   but present similar issues.
** what to research
   What happens to lines that start with #? *? -? +?
   If there's leading space before them?
* DONE obsolete
** Should it produce .md, or .org?
*** org would be more natural
    Since Github has canned ways of showing org,
    Keeping it .org would mean skipping a lot of translation steps.
** If producing .md, find a canned org-to-md conversion routine
   If it exists, it's probably easier to modify that
   than to start from scratch.
** research links to headings
*** What is the format?
*** Can it be done in a .org file on Github?
*** Should I create a new ID, one that definitely works,
    for each linked heading?
** research Github URL formats
